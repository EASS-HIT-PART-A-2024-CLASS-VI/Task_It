version: '3.8'

services:
  frontend:
    build:
      context: ./my-new-app2  # Path to the frontend directory
      dockerfile: Dockerfile  # Path to the Dockerfile inside the frontend directory
    container_name: TaskItFrontend_app
    ports:
      - "3000:3000"  # Expose frontend on localhost:3000
    networks:
      - app-network
    depends_on:
      - fastapi  # Ensure the backend starts before the frontend

  fastapi:
    build:
      context: ./backend  # Path to the backend directory
      dockerfile: Dockerfile  # Path to the Dockerfile inside the backend directory
    container_name: fastapi_app
    ports:
      - "${PORT}:${PORT}"  # Use .env variable for port
    depends_on:
      mongo:
        condition: service_healthy  # Ensures MongoDB is ready before FastAPI starts
    environment:
      - MONGO_URI=${MONGO_URI}
      - DB_NAME=${DB_NAME}
      - PORT=${PORT}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./backend:/app
    networks:
      - app-network
    env_file:
      - .env  # Load backend environment variables

  mongo:
    image: mongo:5.0
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      retries: 5
      start_period: 10s

volumes:
  mongo_data:

networks:
  app-network:
    driver: bridge
